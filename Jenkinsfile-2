pipeline {
    agent none
    environment {
        PROJECT = 'sombra-courses-api'
    }
    stages {
        stage('Cloning Git to test environment') {
            agent { label 'jenkins-slave-1' }
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/jenkins']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/veronika-donets/students-courses.git']]])
            }
        }
        stage('Build') {
            agent { label 'jenkins-slave-1' }
            environment {
                NODE_ENV = 'test'
                TAG = 'test'
            }
            steps {
                sh 'docker-compose -f docker-compose-production.yml build'
            }
        }
        stage('Test') {
            agent { label 'jenkins-slave-1' }
            environment {
                NODE_ENV = 'test'
                TAG = 'test'
                HOME = '.'
            }
            steps {
                withDockerContainer("${PROJECT}:${TAG}") {
                    sh 'npm install jest'
                    sh 'npm run test'
                }
                sh 'docker rmi "${PROJECT}:${TAG}"'
                sh "docker rmi ${docker images | grep '^<none>'}"
            }
        }
        stage('Deploy') {
            agent { label 'jenkins-production' }
            stage('Cloning Git to production environment') {
                agent { label 'jenkins-production' }
                steps {
                    checkout([$class: 'GitSCM', branches: [[name: '*/jenkins']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/veronika-donets/students-courses.git']]])
                }
            }
            environment {
                NODE_ENV = 'production'
                TAG = 'latest'
            }
            steps {
                sh 'docker-compose -f docker-compose-production.yml build'
                withDockerContainer("${PROJECT}:${TAG}") {
                    sh 'npm install sequelize-cli'
                    sh 'npm run db:migrate'
                }
                sh 'docker run "${PROJECT}:${TAG}"'
            }
        }
    }
    post {
        always {
            agent { label 'jenkins-production' }
            sh "docker rmi ${docker images | grep '^<none>'}"
        }
    }
}